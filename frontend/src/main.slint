import { StandardListView, ListView, ScrollView, AboutSlint, Slider } from "std-widgets.slint";

export component UI {
    // runtime constants
    in property <[StandardListViewItem]> filenames;
    in property <image> fallback-image;

    // interact menu options
    in property <length> scroll-speed-x;
    in property <length> scroll-speed-y;

    pure callback load-image(string) -> image;
    callback request-redraw;

    init => {
        image-controls.focus();
        request-redraw();
    }

    image := Flickable {
        visible: image-controls.has-focus;

        Image {
            source:
                image.visible ?
                    load_image(filenames[menu.current-item].text) :
                    fallback-image;
        }
    }

    menu := StandardListView {
        visible: menu-controls.has-focus;
        model: filenames;

        init => {
            self.current-item = 0;
        }
    }

    image-controls := FocusScope {
        width: 0px;
        height: 0px;

        key-pressed(event) => {
            if (event.text == Key.UpArrow) {
                image.viewport-y -= scroll-speed-y;
            } else if (event.text == Key.DownArrow) {
                image.viewport-y += scroll-speed-y;
            } else if (event.text == Key.LeftArrow) {
                image.viewport-x -= scroll-speed-x;
            } else if (event.text == Key.RightArrow) {
                image.viewport-x += scroll-speed-x;
            } else if (event.text == "l") {
                previous-menu-item();
            } else if (event.text == "r") {
                next-menu-item();
            } else if (event.text == Key.Escape) {
                menu-controls.focus();
            } else {
                return reject;
            }
            accept
        }
    }

    menu-controls := FocusScope {
        width: 0px;
        height: 0px;

        key-pressed(event) => {
            if (event.text == Key.UpArrow) {
                previous-menu-item();
            } else if (event.text == Key.DownArrow) {
                next-menu-item();
            } else if (event.text == "a" || event.text == Key.Escape) {
                image-controls.focus();
            } else {
                return reject;
            }
            accept
        }
    }

    // todo: % operator causes a linking error?

    function previous-menu-item() {
        if (menu.current-item > 0) {
            menu.set-current-item(menu.current-item - 1);
        } else {
            menu.set-current-item(filenames.length - 1);
        }
    }

    function next-menu-item() {
        if (menu.current-item < filenames.length - 1) {
            menu.set-current-item(menu.current-item + 1);
        } else {
            menu.set-current-item(0);
        }
    }
}
